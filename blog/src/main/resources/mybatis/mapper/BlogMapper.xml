<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycclee.blog.mapper.BlogMapper">
    <resultMap id="BaseResultMap" type="com.mycclee.blog.beans.Blog">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="summary" jdbcType="VARCHAR" property="summary"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="htmlContent" jdbcType="VARCHAR" property="htmlcontent"/>
        <result column="uid" jdbcType="BIGINT" property="uid"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="reading" jdbcType="BIGINT" property="reading"/>
        <result column="comments" jdbcType="BIGINT" property="comments"/>
        <result column="likes" jdbcType="BIGINT" property="likes"/>
        <result column="cid" jdbcType="BIGINT" property="cid"/>
        <result column="tag" jdbcType="VARCHAR" property="tag"/>
    </resultMap>
    <resultMap id="resultAllBlog" type="com.mycclee.blog.beans.Blog">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="summary" jdbcType="VARCHAR" property="summary"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="htmlContent" jdbcType="VARCHAR" property="htmlcontent"/>
        <result column="uid" jdbcType="BIGINT" property="uid"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="reading" jdbcType="BIGINT" property="reading"/>
        <result column="comments" jdbcType="BIGINT" property="comments"/>
        <result column="likes" jdbcType="BIGINT" property="likes"/>
        <result column="cid" jdbcType="BIGINT" property="cid"/>
        <result column="tag" jdbcType="VARCHAR" property="tag"/>
        <association property="user" javaType="com.mycclee.blog.beans.User">
            <id property="id" column="uid"/>
            <result property="name" column="name"/>
            <result property="email" column="email"/>
            <result property="username" column="username"/>
            <result property="password" column="password"/>
            <result property="avatar" column="avatar"/>
            <result property="roles" column="roles"/>
        </association>
        <association property="catalog" javaType="com.mycclee.blog.beans.Catalog">
            <id property="id" column="cid"/>
            <result property="name" column="name"/>
            <result property="uid" column="uid"/>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, title, summary, content, htmlContent, uid, createTime, reading, comments, likes, 
    cid, tag
  </sql>
    <select id="selectByExample" parameterType="com.mycclee.blog.beans.BlogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from blogcontent
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from blogcontent
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blogcontent
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.mycclee.blog.beans.BlogExample">
        delete from blogcontent
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mycclee.blog.beans.Blog" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
    insert into blogcontent (id, title, summary, 
      content, htmlContent, uid, 
      createTime, reading, comments, 
      likes, cid, tag)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{htmlcontent,jdbcType=VARCHAR}, #{uid,jdbcType=BIGINT}, 
      #{createtime,jdbcType=TIMESTAMP}, #{reading,jdbcType=BIGINT}, #{comments,jdbcType=BIGINT}, 
      #{likes,jdbcType=BIGINT}, #{cid,jdbcType=BIGINT}, #{tag,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.mycclee.blog.beans.Blog">
        insert into blogcontent
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="summary != null">
                summary,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="htmlcontent != null">
                htmlContent,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="createtime != null">
                createTime,
            </if>
            <if test="reading != null">
                reading,
            </if>
            <if test="comments != null">
                comments,
            </if>
            <if test="likes != null">
                likes,
            </if>
            <if test="cid != null">
                cid,
            </if>
            <if test="tag != null">
                tag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="summary != null">
                #{summary,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="htmlcontent != null">
                #{htmlcontent,jdbcType=VARCHAR},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="reading != null">
                #{reading,jdbcType=BIGINT},
            </if>
            <if test="comments != null">
                #{comments,jdbcType=BIGINT},
            </if>
            <if test="likes != null">
                #{likes,jdbcType=BIGINT},
            </if>
            <if test="cid != null">
                #{cid,jdbcType=BIGINT},
            </if>
            <if test="tag != null">
                #{tag,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mycclee.blog.beans.BlogExample" resultType="java.lang.Long">
        select count(*) from blogcontent
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update blogcontent
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.summary != null">
                summary = #{record.summary,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.htmlcontent != null">
                htmlContent = #{record.htmlcontent,jdbcType=VARCHAR},
            </if>
            <if test="record.uid != null">
                uid = #{record.uid,jdbcType=BIGINT},
            </if>
            <if test="record.createtime != null">
                createTime = #{record.createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.reading != null">
                reading = #{record.reading,jdbcType=BIGINT},
            </if>
            <if test="record.comments != null">
                comments = #{record.comments,jdbcType=BIGINT},
            </if>
            <if test="record.likes != null">
                likes = #{record.likes,jdbcType=BIGINT},
            </if>
            <if test="record.cid != null">
                cid = #{record.cid,jdbcType=BIGINT},
            </if>
            <if test="record.tag != null">
                tag = #{record.tag,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update blogcontent
        set id = #{record.id,jdbcType=BIGINT},
        title = #{record.title,jdbcType=VARCHAR},
        summary = #{record.summary,jdbcType=VARCHAR},
        content = #{record.content,jdbcType=VARCHAR},
        htmlContent = #{record.htmlcontent,jdbcType=VARCHAR},
        uid = #{record.uid,jdbcType=BIGINT},
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
        reading = #{record.reading,jdbcType=BIGINT},
        comments = #{record.comments,jdbcType=BIGINT},
        likes = #{record.likes,jdbcType=BIGINT},
        cid = #{record.cid,jdbcType=BIGINT},
        tag = #{record.tag,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mycclee.blog.beans.Blog">
        update blogcontent
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="summary != null">
                summary = #{summary,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="htmlcontent != null">
                htmlContent = #{htmlcontent,jdbcType=VARCHAR},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=BIGINT},
            </if>
            <if test="createtime != null">
                createTime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="reading != null">
                reading = #{reading,jdbcType=BIGINT},
            </if>
            <if test="comments != null">
                comments = #{comments,jdbcType=BIGINT},
            </if>
            <if test="likes != null">
                likes = #{likes,jdbcType=BIGINT},
            </if>
            <if test="cid != null">
                cid = #{cid,jdbcType=BIGINT},
            </if>
            <if test="tag != null">
                tag = #{tag,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mycclee.blog.beans.Blog">
    update blogcontent
    set title = #{title,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      htmlContent = #{htmlcontent,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=BIGINT},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      reading = #{reading,jdbcType=BIGINT},
      comments = #{comments,jdbcType=BIGINT},
      likes = #{likes,jdbcType=BIGINT},
      cid = #{cid,jdbcType=BIGINT},
      tag = #{tag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectAllBlog" resultMap="resultAllBlog">
    select blogcontent.*,bloguser.*,blogcatalog.*
    from blogcontent,bloguser,blogcatalog
    where blogcontent.cid = blogcatalog.id and blogcontent.uid = bloguser.id
    order by createtime desc
  </select>
    <select id="selectBlogsOrderByTime" resultMap="resultAllBlog">
    select blogcontent.*,bloguser.*,blogcatalog.*
    from blogcontent,bloguser,blogcatalog
    where blogcontent.cid = blogcatalog.id and blogcontent.uid = bloguser.id
    order by createtime desc
    limit 0,5
    </select>
    <select id="selectBlogsOrderByCommentsAndLikes" resultMap="resultAllBlog">
    select blogcontent.*,bloguser.*,blogcatalog.*
    from blogcontent,bloguser,blogcatalog
    where blogcontent.cid = blogcatalog.id and blogcontent.uid = bloguser.id
    order by (comments + likes) desc
    limit 0,5
    </select>
    <select id="selectBlogsByOwner" parameterType="Long" resultMap="resultAllBlog">
    select blogcontent.*,bloguser.*,blogcatalog.*
    from blogcontent,bloguser,blogcatalog
    where blogcontent.cid = blogcatalog.id and blogcontent.uid = bloguser.id
    and blogcontent.uid = #{uid,jdbcType=BIGINT}
    order by createTime desc
    </select>
    <select id="getBlogsByCid" parameterType="com.mycclee.blog.beans.Blog" resultMap="resultAllBlog">
    select blogcontent.*,bloguser.*,blogcatalog.*
    from blogcontent,bloguser,blogcatalog
    where blogcontent.cid = blogcatalog.id and blogcontent.uid = bloguser.id
    and blogcontent.uid = #{uid,jdbcType=BIGINT} and blogcontent.cid = #{cid,jdbcType=BIGINT}
    order by createTime desc
    </select>
    <select id="getBlogsByTags" parameterType="com.mycclee.blog.beans.Blog" resultMap="resultAllBlog">
    select blogcontent.*,bloguser.*,blogcatalog.*
    from blogcontent,bloguser,blogcatalog
    where blogcontent.cid = blogcatalog.id and blogcontent.uid = bloguser.id
    and blogcontent.uid = #{uid,jdbcType=BIGINT} and blogcontent.tag like #{tag,jdbcType=VARCHAR}
    </select>
    <select id="listBlogsByHot" parameterType="Long" resultMap="resultAllBlog">
    select blogcontent.*,bloguser.*,blogcatalog.*
    from blogcontent,bloguser,blogcatalog
    where blogcontent.cid = blogcatalog.id and blogcontent.uid = bloguser.id
    and blogcontent.uid = #{uid,jdbcType=BIGINT}
    order by (comments + likes) desc
    </select>
    <select id="listBlogsByNew" parameterType="Long" resultMap="resultAllBlog">
    select blogcontent.*,bloguser.*,blogcatalog.*
    from blogcontent,bloguser,blogcatalog
    where blogcontent.cid = blogcatalog.id and blogcontent.uid = bloguser.id
    and blogcontent.uid = #{uid,jdbcType=BIGINT}
    order by createTime desc
    </select>
    <select id="selectAllBlogByHot" resultMap="resultAllBlog">
    select blogcontent.*,bloguser.*,blogcatalog.*
    from blogcontent,bloguser,blogcatalog
    where blogcontent.cid = blogcatalog.id and blogcontent.uid = bloguser.id
    order by (comments + likes) desc
    </select>
</mapper>